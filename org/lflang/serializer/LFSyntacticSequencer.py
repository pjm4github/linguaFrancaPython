#!/usr/bin/env python
""" generated source for module LFSyntacticSequencer """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.serializer
import com.google.inject.Inject
# import java.util.List
# import org.eclipse.emf.ecore.EObject
# import org.eclipse.xtext.IGrammarAccess
# import org.eclipse.xtext.RuleCall
# import org.eclipse.xtext.nodemodel.INode
# import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias
# import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias
# import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias
# import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable
# import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition
# import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer

from org.lflang.services.LFGrammarAccess

@SuppressWarnings("all")
class LFSyntacticSequencer(AbstractSyntacticSequencer):
    """ generated source for class LFSyntacticSequencer """
    grammarAccess = None
    match_Action_SemicolonKeyword_6_q = None
    match_Array_CommaKeyword_3_q = None
    match_Attribute_CommaKeyword_2_1_2_q = None
    match_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = None
    match_Connection_SemicolonKeyword_6_q = None
    match_Import_SemicolonKeyword_5_q = None
    match_Input_SemicolonKeyword_6_q = None
    match_Instantiation_SemicolonKeyword_9_1_q = None
    match_KeyValuePairs_CommaKeyword_2_2_q = None
    match_Method_SemicolonKeyword_8_q = None
    match_Output_SemicolonKeyword_5_q = None
    match_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = None
    match_StateVar_SemicolonKeyword_5_q = None
    match_TargetDecl_SemicolonKeyword_3_q = None
    match_Timer_SemicolonKeyword_4_q = None

    def init(self, access):
        """ generated source for method init """
        self.grammarAccess = access
        self.match_Action_SemicolonKeyword_6_q = TokenAlias(False, True, self.grammarAccess.getActionAccess().getSemicolonKeyword_6())
        self.match_Array_CommaKeyword_3_q = TokenAlias(False, True, self.grammarAccess.getArrayAccess().getCommaKeyword_3())
        self.match_Attribute_CommaKeyword_2_1_2_q = TokenAlias(False, True, self.grammarAccess.getAttributeAccess().getCommaKeyword_2_1_2())
        self.match_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = GroupAlias(False, True, TokenAlias(False, False, self.grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_2_0()), TokenAlias(False, False, self.grammarAccess.getAttributeAccess().getRightParenthesisKeyword_2_2()))
        self.match_Connection_SemicolonKeyword_6_q = TokenAlias(False, True, self.grammarAccess.getConnectionAccess().getSemicolonKeyword_6())
        self.match_Import_SemicolonKeyword_5_q = TokenAlias(False, True, self.grammarAccess.getImportAccess().getSemicolonKeyword_5())
        self.match_Input_SemicolonKeyword_6_q = TokenAlias(False, True, self.grammarAccess.getInputAccess().getSemicolonKeyword_6())
        self.match_Instantiation_SemicolonKeyword_9_1_q = TokenAlias(False, True, self.grammarAccess.getInstantiationAccess().getSemicolonKeyword_9_1())
        self.match_KeyValuePairs_CommaKeyword_2_2_q = TokenAlias(False, True, self.grammarAccess.getKeyValuePairsAccess().getCommaKeyword_2_2())
        self.match_Method_SemicolonKeyword_8_q = TokenAlias(False, True, self.grammarAccess.getMethodAccess().getSemicolonKeyword_8())
        self.match_Output_SemicolonKeyword_5_q = TokenAlias(False, True, self.grammarAccess.getOutputAccess().getSemicolonKeyword_5())
        self.match_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = GroupAlias(False, True, TokenAlias(False, False, self.grammarAccess.getReactionAccess().getLeftParenthesisKeyword_2_0()), TokenAlias(False, False, self.grammarAccess.getReactionAccess().getRightParenthesisKeyword_2_2()))
        self.match_StateVar_SemicolonKeyword_5_q = TokenAlias(False, True, self.grammarAccess.getStateVarAccess().getSemicolonKeyword_5())
        self.match_TargetDecl_SemicolonKeyword_3_q = TokenAlias(False, True, self.grammarAccess.getTargetDeclAccess().getSemicolonKeyword_3())
        self.match_Timer_SemicolonKeyword_4_q = TokenAlias(False, True, self.grammarAccess.getTimerAccess().getSemicolonKeyword_4())

    def getUnassignedRuleCallToken(self, semanticObject, ruleCall, node):
        """ generated source for method getUnassignedRuleCallToken """
        return ""

    def emitUnassignedTokens(self, semanticObject, transition, fromNode, toNode):
        """ generated source for method emitUnassignedTokens """
        if transition.getAmbiguousSyntaxes().isEmpty():
            return
        transitionNodes = collectNodes(fromNode, toNode)
        for syntax in transition.getAmbiguousSyntaxes():
            syntaxNodes = getNodesFor(transitionNodes, syntax)
            if self.match_Action_SemicolonKeyword_6_q == syntax:
                emit_Action_SemicolonKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Array_CommaKeyword_3_q == syntax:
                emit_Array_CommaKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Attribute_CommaKeyword_2_1_2_q == syntax:
                emit_Attribute_CommaKeyword_2_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q == syntax:
                emit_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Connection_SemicolonKeyword_6_q == syntax:
                emit_Connection_SemicolonKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Import_SemicolonKeyword_5_q == syntax:
                emit_Import_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Input_SemicolonKeyword_6_q == syntax:
                emit_Input_SemicolonKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Instantiation_SemicolonKeyword_9_1_q == syntax:
                emit_Instantiation_SemicolonKeyword_9_1_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_KeyValuePairs_CommaKeyword_2_2_q == syntax:
                emit_KeyValuePairs_CommaKeyword_2_2_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Method_SemicolonKeyword_8_q == syntax:
                emit_Method_SemicolonKeyword_8_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Output_SemicolonKeyword_5_q == syntax:
                emit_Output_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q == syntax:
                emit_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_StateVar_SemicolonKeyword_5_q == syntax:
                emit_StateVar_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_TargetDecl_SemicolonKeyword_3_q == syntax:
                emit_TargetDecl_SemicolonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes)
            elif self.match_Timer_SemicolonKeyword_4_q == syntax:
                emit_Timer_SemicolonKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes)
            else:
                acceptNodes(getLastNavigableState(), syntaxNodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     minDelay=Expression ')' (ambiguity) (rule end)
    # 	 *     minSpacing=Expression ')' (ambiguity) (rule end)
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 *     policy=STRING ')' (ambiguity) (rule end)
    # 	 *     type=Type (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Action_SemicolonKeyword_6_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Action_SemicolonKeyword_6_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ','?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     elements+=Element (ambiguity) ']' (rule end)
    # 	 * </pre>
    # 	 
    def emit_Array_CommaKeyword_3_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Array_CommaKeyword_3_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ','?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     attrParms+=AttrParm (ambiguity) ')' (rule end)
    # 	 * </pre>
    # 	 
    def emit_Attribute_CommaKeyword_2_1_2_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Attribute_CommaKeyword_2_1_2_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ('(' ')')?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     attrName=ID (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Attribute___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     delay=Expression (ambiguity) (rule end)
    # 	 *     rightPorts+=VarRef (ambiguity) (rule end)
    # 	 *     serializer=Serializer (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Connection_SemicolonKeyword_6_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Connection_SemicolonKeyword_6_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     importURI=STRING (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Import_SemicolonKeyword_5_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Import_SemicolonKeyword_5_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 *     type=Type (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Input_SemicolonKeyword_6_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Input_SemicolonKeyword_6_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     parameters+=Assignment ')' (ambiguity) (rule end)
    # 	 *     reactorClass=[ReactorDecl|ID] '(' ')' (ambiguity) (rule end)
    # 	 *     typeParms+=TypeParm '&gt;' '(' ')' (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Instantiation_SemicolonKeyword_9_1_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Instantiation_SemicolonKeyword_9_1_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ','?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     pairs+=KeyValuePair (ambiguity) '}' (rule end)
    # 	 * </pre>
    # 	 
    def emit_KeyValuePairs_CommaKeyword_2_2_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_KeyValuePairs_CommaKeyword_2_2_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     code=Code (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Method_SemicolonKeyword_8_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Method_SemicolonKeyword_8_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 *     type=Type (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Output_SemicolonKeyword_5_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Output_SemicolonKeyword_5_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ('(' ')')?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     (rule start) 'reaction' (ambiguity) '-&gt;' effects+=VarRefOrModeTransition
    # 	 *     (rule start) 'reaction' (ambiguity) code=Code
    # 	 *     (rule start) 'reaction' (ambiguity) sources+=VarRef
    # 	 *     attributes+=Attribute 'reaction' (ambiguity) '-&gt;' effects+=VarRefOrModeTransition
    # 	 *     attributes+=Attribute 'reaction' (ambiguity) code=Code
    # 	 *     attributes+=Attribute 'reaction' (ambiguity) sources+=VarRef
    # 	 *     mutation?='mutation' (ambiguity) '-&gt;' effects+=VarRefOrModeTransition
    # 	 *     mutation?='mutation' (ambiguity) code=Code
    # 	 *     mutation?='mutation' (ambiguity) sources+=VarRef
    # 	 * </pre>
    # 	 
    def emit_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Reaction___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     braces+='}' (ambiguity) (rule end)
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 *     parens+=')' (ambiguity) (rule end)
    # 	 *     type=Type (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_StateVar_SemicolonKeyword_5_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_StateVar_SemicolonKeyword_5_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     config=KeyValuePairs (ambiguity) (rule end)
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_TargetDecl_SemicolonKeyword_3_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_TargetDecl_SemicolonKeyword_3_q """
        acceptNodes(transition, nodes)

    # 	 * <pre>
    # 	 * Ambiguous syntax:
    # 	 *     ';'?
    # 	 *
    # 	 * This ambiguous syntax occurs at:
    # 	 *     name=ID (ambiguity) (rule end)
    # 	 *     offset=Expression ')' (ambiguity) (rule end)
    # 	 *     period=Expression ')' (ambiguity) (rule end)
    # 	 * </pre>
    # 	 
    def emit_Timer_SemicolonKeyword_4_q(self, semanticObject, transition, nodes):
        """ generated source for method emit_Timer_SemicolonKeyword_4_q """
        acceptNodes(transition, nodes)
