#!/usr/bin/env python
""" generated source for module LFRuntimeModule """
# 
#  * generated by Xtext 2.23.0
#  
# package: org.lflang
# import org.eclipse.xtext.formatting2.IFormatter2
# import org.eclipse.xtext.parser.antlr.ISyntaxErrorMessageProvider
# import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy
# import org.eclipse.xtext.scoping.IGlobalScopeProvider
# import org.eclipse.xtext.validation.INamesAreUniqueValidationHelper

from org.lflang.formatting2.LFFormatter

from org.lflang.scoping.LFGlobalScopeProvider

from org.lflang.validation.LFNamesAreUniqueValidationHelper

# 
#  * Binds services that are available both when running LFC
#  * standalone, and when running within the IDE.
#  * <ul>
#  * <li>LfIdeModule overrides this module with additional
#  * bindings when running in the IDE.
#  * <li>{@code org.lflang.lfc.LFStandaloneModule} overrides this module when
#  * running LFC standalone.
#  * </ul>
#  
class LFRuntimeModule(AbstractLFRuntimeModule):
    """ generated source for class LFRuntimeModule """
    #  Establish a binding to our custom resource description strategy. 
    def bindIDefaultResourceDescriptionStrategy(self):
        """ generated source for method bindIDefaultResourceDescriptionStrategy """
        return LFResourceDescriptionStrategy.__class__

    #  Establish a binding to our custom global scope provider. 
    def bindIGlobalScopeProvider(self):
        """ generated source for method bindIGlobalScopeProvider """
        return LFGlobalScopeProvider.__class__

    #  Establish a binding to a helper that checks that names are unique. 
    def bindNamesAreUniqueValidationHelper(self):
        """ generated source for method bindNamesAreUniqueValidationHelper """
        return LFNamesAreUniqueValidationHelper.__class__

    def bindISyntaxErrorMessageProvider(self):
        """ generated source for method bindISyntaxErrorMessageProvider """
        return LFSyntaxErrorMessageProvider.__class__

    #  The error reporter. {@code org.lflang.lfc.LFStandaloneModule} overrides this binding. 
    def bindErrorReporter(self):
        """ generated source for method bindErrorReporter """
        return DefaultErrorReporter.__class__

    def bindIFormatter2(self):
        """ generated source for method bindIFormatter2 """
        return LFFormatter.__class__
