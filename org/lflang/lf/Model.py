#!/usr/bin/env python
""" generated source for module Model """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.common.util.EList
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Model</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Model#getTarget <em>Target</em>}</li>
#  *   <li>{@link org.lflang.lf.Model#getImports <em>Imports</em>}</li>
#  *   <li>{@link org.lflang.lf.Model#getPreambles <em>Preambles</em>}</li>
#  *   <li>{@link org.lflang.lf.Model#getReactors <em>Reactors</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getModel()
#  * @model
#  * @generated
#  
class Model(EObject):
    """ generated source for interface Model """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Target</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Target</em>' containment reference.
    #    * @see #setTarget(TargetDecl)
    #    * @see org.lflang.lf.LfPackage#getModel_Target()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getTarget(self):
        """ generated source for method getTarget """

    #    * Sets the value of the '{@link org.lflang.lf.Model#getTarget <em>Target</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Target</em>' containment reference.
    #    * @see #getTarget()
    #    * @generated
    #    
    @abstractmethod
    def setTarget(self, value):
        """ generated source for method setTarget """

    #    * Returns the value of the '<em><b>Imports</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Import}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Imports</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getModel_Imports()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getImports(self):
        """ generated source for method getImports """

    #    * Returns the value of the '<em><b>Preambles</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Preamble}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Preambles</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getModel_Preambles()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getPreambles(self):
        """ generated source for method getPreambles """

    #    * Returns the value of the '<em><b>Reactors</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Reactor}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Reactors</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getModel_Reactors()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getReactors(self):
        """ generated source for method getReactors """

#  Model
