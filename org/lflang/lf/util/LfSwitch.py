#!/usr/bin/env python
""" generated source for module LfSwitch """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf.util
# import org.eclipse.emf.ecore.EObject
# import org.eclipse.emf.ecore.EPackage
# import org.eclipse.emf.ecore.util.Switch


# 
#  * <!-- begin-user-doc -->
#  * The <b>Switch</b> for the model's inheritance hierarchy.
#  * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
#  * to invoke the <code>self.caseXXX</code> method for each class of the model,
#  * starting with the actual class of the object
#  * and proceeding up the inheritance hierarchy
#  * until a non-null result is returned,
#  * which is the result of the switch.
#  * <!-- end-user-doc -->
#  * @see org.lflang.lf.LfPackage
#  * @generated
#  
class Switch():
    pass

from lflang.lf import LfPackage


class LfSwitch(Switch
               ):
    """ generated source for class LfSwitch """
    #    * The cached model package
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    modelPackage = None

    #    * Creates an instance of the switch.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __init__(self):
        """ generated source for method __init__ """
        super(LfSwitch, self).__init__()
        if self.modelPackage == None:
            self.modelPackage = LfPackage.eINSTANCE

    #    * Checks whether this is a switch for the given package.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param ePackage the package in question.
    #    * @return whether this is a switch for the given package.
    #    * @generated
    #    
    def isSwitchFor(self, ePackage):
        """ generated source for method isSwitchFor """
        return ePackage == self.modelPackage

    #    * Calls <code>self.caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the first non-null result returned by a <code>self.caseXXX</code> call.
    #    * @generated
    #    
    def doSwitch(self, classifierID, theEObject):
        """ generated source for method doSwitch """
        if classifierID == LfPackage.MODEL:
            model = theEObject
            result = self.self.caseModel(model)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.IMPORT:
            import_ = theEObject
            result = self.caseImport(import_)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.REACTOR_DECL:
            reactorDecl = theEObject
            result = self.caseReactorDecl(reactorDecl)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.IMPORTED_REACTOR:
            importedReactor = theEObject
            result = self.caseImportedReactor(importedReactor)
            if result == None:
                result = self.caseReactorDecl(importedReactor)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.REACTOR:
            reactor = theEObject
            result = self.caseReactor(reactor)
            if result == None:
                result = self.caseReactorDecl(reactor)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TYPE_PARM:
            typeParm = theEObject
            result = self.caseTypeParm(typeParm)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TARGET_DECL:
            targetDecl = theEObject
            result = self.caseTargetDecl(targetDecl)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.STATE_VAR:
            stateVar = theEObject
            result = self.caseStateVar(stateVar)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.METHOD:
            method_ = theEObject
            result = self.caseMethod(method_)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.METHOD_ARGUMENT:
            methodArgument = theEObject
            result = self.caseMethodArgument(methodArgument)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.INPUT:
            input = theEObject
            result = self.caseInput(input)
            if result == None:
                result = self.casePort(input)
            if result == None:
                result = self.caseTypedVariable(input)
            if result == None:
                result = self.caseVariable(input)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.OUTPUT:
            output = theEObject
            result = self.caseOutput(output)
            if result == None:
                result = self.casePort(output)
            if result == None:
                result = self.caseTypedVariable(output)
            if result == None:
                result = self.caseVariable(output)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TIMER:
            timer = theEObject
            result = self.caseTimer(timer)
            if result == None:
                result = self.caseVariable(timer)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.MODE:
            mode = theEObject
            result = self.caseMode(mode)
            if result == None:
                result = self.caseVariable(mode)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ACTION:
            action = theEObject
            result = self.caseAction(action)
            if result == None:
                result = self.caseTypedVariable(action)
            if result == None:
                result = self.caseVariable(action)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.REACTION:
            reaction = theEObject
            result = self.caseReaction(reaction)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TRIGGER_REF:
            triggerRef = theEObject
            result = self.caseTriggerRef(triggerRef)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.BUILTIN_TRIGGER_REF:
            builtinTriggerRef = theEObject
            result = self.caseBuiltinTriggerRef(builtinTriggerRef)
            if result == None:
                result = self.caseTriggerRef(builtinTriggerRef)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.DEADLINE:
            deadline = theEObject
            result = self.caseDeadline(deadline)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.STP:
            stp = theEObject
            result = self.caseSTP(stp)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.PREAMBLE:
            preamble = theEObject
            result = self.casePreamble(preamble)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.INSTANTIATION:
            instantiation = theEObject
            result = self.caseInstantiation(instantiation)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.CONNECTION:
            connection = theEObject
            result = self.caseConnection(connection)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.SERIALIZER:
            serializer = theEObject
            result = self.caseSerializer(serializer)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ATTRIBUTE:
            attribute = theEObject
            result = self.caseAttribute(attribute)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ATTR_PARM:
            attrParm = theEObject
            result = self.caseAttrParm(attrParm)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ATTR_PARM_VALUE:
            attrParmValue = theEObject
            result = self.caseAttrParmValue(attrParmValue)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.KEY_VALUE_PAIRS:
            keyValuePairs = theEObject
            result = self.caseKeyValuePairs(keyValuePairs)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.KEY_VALUE_PAIR:
            keyValuePair = theEObject
            result = self.caseKeyValuePair(keyValuePair)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ARRAY:
            array = theEObject
            result = self.caseArray(array)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ELEMENT:
            element = theEObject
            result = self.caseElement(element)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TYPED_VARIABLE:
            typedVariable = theEObject
            result = self.caseTypedVariable(typedVariable)
            if result == None:
                result = self.caseVariable(typedVariable)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.VARIABLE:
            variable = theEObject
            result = self.caseVariable(variable)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.VAR_REF:
            varRef = theEObject
            result = self.caseVarRef(varRef)
            if result == None:
                result = self.caseTriggerRef(varRef)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ASSIGNMENT:
            assignment = theEObject
            result = self.caseAssignment(assignment)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.PARAMETER:
            parameter = theEObject
            result = self.caseParameter(parameter)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.EXPRESSION:
            expression = theEObject
            result = self.caseExpression(expression)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.PARAMETER_REFERENCE:
            parameterReference = theEObject
            result = self.caseParameterReference(parameterReference)
            if result == None:
                result = self.caseExpression(parameterReference)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TIME:
            time = theEObject
            result = self.caseTime(time)
            if result == None:
                result = self.caseExpression(time)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.PORT:
            port = theEObject
            result = self.casePort(port)
            if result == None:
                result = self.caseTypedVariable(port)
            if result == None:
                result = self.caseVariable(port)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.TYPE:
            type = theEObject
            result = self.caseType(type)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.ARRAY_SPEC:
            arraySpec = theEObject
            result = self.caseArraySpec(arraySpec)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.WIDTH_SPEC:
            widthSpec = theEObject
            result = self.caseWidthSpec(widthSpec)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.WIDTH_TERM:
            widthTerm = theEObject
            result = self.caseWidthTerm(widthTerm)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.IPV4_HOST:
            ipv4Host = theEObject
            result = self.caseIPV4Host(ipv4Host)
            if result == None:
                result = self.caseHost(ipv4Host)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.IPV6_HOST:
            ipv6Host = theEObject
            result = self.caseIPV6Host(ipv6Host)
            if result == None:
                result = self.caseHost(ipv6Host)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.NAMED_HOST:
            namedHost = theEObject
            result = self.caseNamedHost(namedHost)
            if result == None:
                result = self.caseHost(namedHost)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.HOST:
            host = theEObject
            result = self.caseHost(host)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.CODE:
            code_ = theEObject
            result = self.caseCode(code_)
            if result == None:
                result = self.caseExpression(code_)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        elif classifierID == LfPackage.LITERAL:
            literal = theEObject
            result = self.caseLiteral(literal)
            if result == None:
                result = self.caseExpression(literal)
            if result == None:
                result = self.defaultself.Case(theEObject)
            return result
        else:
            return self.defaultself.Case(theEObject)

    #    * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Model</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseModel(self, object):
        """ generated source for method self.caseModel """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Import</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseImport(self, object):
        """ generated source for method self.caseImport """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Reactor Decl</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Reactor Decl</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseReactorDecl(self, object):
        """ generated source for method self.caseReactorDecl """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Imported Reactor</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Imported Reactor</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseImportedReactor(self, object):
        """ generated source for method self.caseImportedReactor """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Reactor</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Reactor</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseReactor(self, object):
        """ generated source for method self.caseReactor """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Type Parm</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Type Parm</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTypeParm(self, object):
        """ generated source for method self.caseTypeParm """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Target Decl</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Target Decl</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTargetDecl(self, object):
        """ generated source for method self.caseTargetDecl """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>State Var</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>State Var</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseStateVar(self, object):
        """ generated source for method self.caseStateVar """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Method</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Method</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseMethod(self, object):
        """ generated source for method self.caseMethod """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Method Argument</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Method Argument</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseMethodArgument(self, object):
        """ generated source for method self.caseMethodArgument """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Input</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Input</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseInput(self, object):
        """ generated source for method self.caseInput """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Output</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Output</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseOutput(self, object):
        """ generated source for method self.caseOutput """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Timer</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Timer</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTimer(self, object):
        """ generated source for method self.caseTimer """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Mode</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Mode</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseMode(self, object):
        """ generated source for method self.caseMode """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Action</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseAction(self, object):
        """ generated source for method self.caseAction """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Reaction</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Reaction</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseReaction(self, object):
        """ generated source for method self.caseReaction """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Trigger Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Trigger Ref</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTriggerRef(self, object):
        """ generated source for method self.caseTriggerRef """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Builtin Trigger Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Builtin Trigger Ref</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseBuiltinTriggerRef(self, object):
        """ generated source for method self.caseBuiltinTriggerRef """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Deadline</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Deadline</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseDeadline(self, object):
        """ generated source for method self.caseDeadline """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>STP</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>STP</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseSTP(self, object):
        """ generated source for method self.caseSTP """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Preamble</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Preamble</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def casePreamble(self, object):
        """ generated source for method self.casePreamble """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Instantiation</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Instantiation</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseInstantiation(self, object):
        """ generated source for method self.caseInstantiation """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Connection</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Connection</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseConnection(self, object):
        """ generated source for method self.caseConnection """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Serializer</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Serializer</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseSerializer(self, object):
        """ generated source for method self.caseSerializer """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseAttribute(self, object):
        """ generated source for method self.caseAttribute """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Attr Parm</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Attr Parm</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseAttrParm(self, object):
        """ generated source for method self.caseAttrParm """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Attr Parm Value</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Attr Parm Value</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseAttrParmValue(self, object):
        """ generated source for method self.caseAttrParmValue """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Key Value Pairs</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Key Value Pairs</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseKeyValuePairs(self, object):
        """ generated source for method self.caseKeyValuePairs """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Key Value Pair</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Key Value Pair</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseKeyValuePair(self, object):
        """ generated source for method self.caseKeyValuePair """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Array</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Array</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseArray(self, object):
        """ generated source for method self.caseArray """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Element</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Element</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseElement(self, object):
        """ generated source for method self.caseElement """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Typed Variable</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Typed Variable</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTypedVariable(self, object):
        """ generated source for method self.caseTypedVariable """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Variable</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Variable</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseVariable(self, object):
        """ generated source for method self.caseVariable """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Var Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Var Ref</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseVarRef(self, object):
        """ generated source for method self.caseVarRef """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Assignment</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Assignment</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseAssignment(self, object):
        """ generated source for method self.caseAssignment """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Parameter</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Parameter</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseParameter(self, object):
        """ generated source for method self.caseParameter """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseExpression(self, object):
        """ generated source for method self.caseExpression """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Parameter Reference</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Parameter Reference</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseParameterReference(self, object):
        """ generated source for method self.caseParameterReference """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Time</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Time</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseTime(self, object):
        """ generated source for method self.caseTime """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Port</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Port</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def casePort(self, object):
        """ generated source for method self.casePort """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Type</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseType(self, object):
        """ generated source for method self.caseType """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Array Spec</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Array Spec</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseArraySpec(self, object):
        """ generated source for method self.caseArraySpec """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Width Spec</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Width Spec</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseWidthSpec(self, object):
        """ generated source for method self.caseWidthSpec """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Width Term</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Width Term</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseWidthTerm(self, object):
        """ generated source for method self.caseWidthTerm """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>IPV4 Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>IPV4 Host</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseIPV4Host(self, object):
        """ generated source for method self.caseIPV4Host """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>IPV6 Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>IPV6 Host</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseIPV6Host(self, object):
        """ generated source for method self.caseIPV6Host """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Named Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Named Host</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseNamedHost(self, object):
        """ generated source for method self.caseNamedHost """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Host</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseHost(self, object):
        """ generated source for method self.caseHost """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Code</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Code</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseCode(self, object):
        """ generated source for method self.caseCode """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>Literal</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>Literal</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
    #    * @generated
    #    
    def caseLiteral(self, object):
        """ generated source for method self.caseLiteral """
        return None

    #    * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
    #    * <!-- begin-user-doc -->
    #    * This implementation returns null;
    #    * returning a non-null result will terminate the switch, but this is the last self.case anyway.
    #    * <!-- end-user-doc -->
    #    * @param object the target of the switch.
    #    * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
    #    * @see #doSwitch(org.eclipse.emf.ecore.EObject)
    #    * @generated
    #    
    def defaultCase(self, object):
        """ generated source for method defaultCase """
        return None

# LfSwitch
