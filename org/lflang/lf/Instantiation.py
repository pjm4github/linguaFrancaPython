#!/usr/bin/env python
""" generated source for module Instantiation """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.common.util.EList
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Instantiation</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Instantiation#getName <em>Name</em>}</li>
#  *   <li>{@link org.lflang.lf.Instantiation#getWidthSpec <em>Width Spec</em>}</li>
#  *   <li>{@link org.lflang.lf.Instantiation#getReactorClass <em>Reactor Class</em>}</li>
#  *   <li>{@link org.lflang.lf.Instantiation#getTypeParms <em>Type Parms</em>}</li>
#  *   <li>{@link org.lflang.lf.Instantiation#getParameters <em>Parameters</em>}</li>
#  *   <li>{@link org.lflang.lf.Instantiation#getHost <em>Host</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getInstantiation()
#  * @model
#  * @generated
#  
class Instantiation(EObject):
    """ generated source for interface Instantiation """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Name</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Name</em>' attribute.
    #    * @see #setName(String)
    #    * @see org.lflang.lf.LfPackage#getInstantiation_Name()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getName(self):
        """ generated source for method getName """

    #    * Sets the value of the '{@link org.lflang.lf.Instantiation#getName <em>Name</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Name</em>' attribute.
    #    * @see #getName()
    #    * @generated
    #    
    @abstractmethod
    def setName(self, value):
        """ generated source for method setName """

    #    * Returns the value of the '<em><b>Width Spec</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Width Spec</em>' containment reference.
    #    * @see #setWidthSpec(WidthSpec)
    #    * @see org.lflang.lf.LfPackage#getInstantiation_WidthSpec()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getWidthSpec(self):
        """ generated source for method getWidthSpec """

    #    * Sets the value of the '{@link org.lflang.lf.Instantiation#getWidthSpec <em>Width Spec</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Width Spec</em>' containment reference.
    #    * @see #getWidthSpec()
    #    * @generated
    #    
    @abstractmethod
    def setWidthSpec(self, value):
        """ generated source for method setWidthSpec """

    #    * Returns the value of the '<em><b>Reactor Class</b></em>' reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Reactor Class</em>' reference.
    #    * @see #setReactorClass(ReactorDecl)
    #    * @see org.lflang.lf.LfPackage#getInstantiation_ReactorClass()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getReactorClass(self):
        """ generated source for method getReactorClass """

    #    * Sets the value of the '{@link org.lflang.lf.Instantiation#getReactorClass <em>Reactor Class</em>}' reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Reactor Class</em>' reference.
    #    * @see #getReactorClass()
    #    * @generated
    #    
    @abstractmethod
    def setReactorClass(self, value):
        """ generated source for method setReactorClass """

    #    * Returns the value of the '<em><b>Type Parms</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.TypeParm}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Type Parms</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getInstantiation_TypeParms()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getTypeParms(self):
        """ generated source for method getTypeParms """

    #    * Returns the value of the '<em><b>Parameters</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Assignment}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Parameters</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getInstantiation_Parameters()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getParameters(self):
        """ generated source for method getParameters """

    #    * Returns the value of the '<em><b>Host</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Host</em>' containment reference.
    #    * @see #setHost(Host)
    #    * @see org.lflang.lf.LfPackage#getInstantiation_Host()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getHost(self):
        """ generated source for method getHost """

    #    * Sets the value of the '{@link org.lflang.lf.Instantiation#getHost <em>Host</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Host</em>' containment reference.
    #    * @see #getHost()
    #    * @generated
    #    
    @abstractmethod
    def setHost(self, value):
        """ generated source for method setHost """

#  Instantiation
