#!/usr/bin/env python
""" generated source for module CodeImpl """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf.impl
# import org.eclipse.emf.common.notify.Notification
# import org.eclipse.emf.ecore.EClass
# import org.eclipse.emf.ecore.impl.ENotificationImpl

from org.lflang.lf import LFCode

from org.lflang.lf import LfPackage

# 
#  * <!-- begin-user-doc -->
#  * An implementation of the model object '<em><b>Code</b></em>'.
#  * <!-- end-user-doc -->
#  * <p>
#  * The following features are implemented:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.impl.CodeImpl#getBody <em>Body</em>}</li>
#  * </ul>
#  *
#  * @generated
#  
class CodeImpl(ExpressionImpl, Code):
    """ generated source for class CodeImpl """
    #    * The default value of the '{@link #getBody() <em>Body</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getBody()
    #    * @generated
    #    * @ordered
    #    
    BODY_EDEFAULT = None

    #    * The cached value of the '{@link #getBody() <em>Body</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getBody()
    #    * @generated
    #    * @ordered
    #    
    body = BODY_EDEFAULT

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __init__(self):
        """ generated source for method __init__ """
        super(CodeImpl, self).__init__()

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eStaticClass(self):
        """ generated source for method eStaticClass """
        return LfPackage.Literals.CODE

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getBody(self):
        """ generated source for method getBody """
        return self.body

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setBody(self, newBody):
        """ generated source for method setBody """
        oldBody = self.body
        self.body = newBody
        if eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.CODE__BODY, oldBody, self.body))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eGet(self, featureID, resolve, coreType):
        """ generated source for method eGet """
        if featureID == LfPackage.CODE__BODY:
            return self.getBody()
        return super(CodeImpl, self).eGet(featureID, resolve, coreType)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eSet(self, featureID, newValue):
        """ generated source for method eSet """
        if featureID == LfPackage.CODE__BODY:
            self.setBody(str(newValue))
            return
        super(CodeImpl, self).eSet(featureID, newValue)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eUnset(self, featureID):
        """ generated source for method eUnset """
        if featureID == LfPackage.CODE__BODY:
            self.setBody(self.BODY_EDEFAULT)
            return
        super(CodeImpl, self).eUnset(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eIsSet(self, featureID):
        """ generated source for method eIsSet """
        if featureID == LfPackage.CODE__BODY:
            return self.body != None if self.BODY_EDEFAULT == None else not self.BODY_EDEFAULT == self.body
        return super(CodeImpl, self).eIsSet(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __str__(self):
        """ generated source for method toString """
        if eIsProxy():
            return super(CodeImpl, self).__str__()
        result = StringBuilder(super(CodeImpl, self).__str__())
        result.append(" (body: ")
        result.append(self.body)
        result.append(')')
        return result.__str__()

# CodeImpl
