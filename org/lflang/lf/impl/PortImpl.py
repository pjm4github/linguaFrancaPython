#!/usr/bin/env python
""" generated source for module PortImpl """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf.impl
# import org.eclipse.emf.common.notify.Notification
# import org.eclipse.emf.common.notify.NotificationChain
# import org.eclipse.emf.ecore.EClass
# import org.eclipse.emf.ecore.InternalEObject
# import org.eclipse.emf.ecore.impl.ENotificationImpl

from org.lflang.lf import LfPackage

from org.lflang.lf import Port

from org.lflang.lf import WidthSpec

# 
#  * <!-- begin-user-doc -->
#  * An implementation of the model object '<em><b>Port</b></em>'.
#  * <!-- end-user-doc -->
#  * <p>
#  * The following features are implemented:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.impl.PortImpl#getWidthSpec <em>Width Spec</em>}</li>
#  * </ul>
#  *
#  * @generated
#  
class PortImpl(TypedVariableImpl, Port):
    """ generated source for class PortImpl """
    #    * The cached value of the '{@link #getWidthSpec() <em>Width Spec</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getWidthSpec()
    #    * @generated
    #    * @ordered
    #    
    widthSpec = None

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __init__(self):
        """ generated source for method __init__ """
        super(PortImpl, self).__init__()

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eStaticClass(self):
        """ generated source for method eStaticClass """
        return LfPackage.Literals.PORT

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getWidthSpec(self):
        """ generated source for method getWidthSpec """
        return self.widthSpec

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def basicSetWidthSpec(self, newWidthSpec, msgs):
        """ generated source for method basicSetWidthSpec """
        oldWidthSpec = self.widthSpec
        self.widthSpec = newWidthSpec
        if eNotificationRequired():
            notification = ENotificationImpl(self, Notification.SET, LfPackage.PORT__WIDTH_SPEC, oldWidthSpec, newWidthSpec)
            if msgs == None:
                msgs = notification
            else:
                msgs.append(notification)
        return msgs

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setWidthSpec(self, newWidthSpec):
        """ generated source for method setWidthSpec """
        if newWidthSpec != self.widthSpec:
            msgs = None
            if self.widthSpec != None:
                msgs = (self.widthSpec).eInverseRemove(self, EOPPOSITE_FEATURE_BASE - LfPackage.PORT__WIDTH_SPEC, None, msgs)
            if newWidthSpec != None:
                msgs = (newWidthSpec).eInverseAdd(self, EOPPOSITE_FEATURE_BASE - LfPackage.PORT__WIDTH_SPEC, None, msgs)
            msgs = self.basicSetWidthSpec(newWidthSpec, msgs)
            if msgs != None:
                msgs.dispatch()
        elif eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.PORT__WIDTH_SPEC, newWidthSpec, newWidthSpec))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eInverseRemove(self, otherEnd, featureID, msgs):
        """ generated source for method eInverseRemove """
        if featureID == LfPackage.PORT__WIDTH_SPEC:
            return self.basicSetWidthSpec(None, msgs)
        return super(PortImpl, self).eInverseRemove(otherEnd, featureID, msgs)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eGet(self, featureID, resolve, coreType):
        """ generated source for method eGet """
        if featureID == LfPackage.PORT__WIDTH_SPEC:
            return self.getWidthSpec()
        return super(PortImpl, self).eGet(featureID, resolve, coreType)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eSet(self, featureID, newValue):
        """ generated source for method eSet """
        if featureID == LfPackage.PORT__WIDTH_SPEC:
            self.setWidthSpec(newValue)
            return
        super(PortImpl, self).eSet(featureID, newValue)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eUnset(self, featureID):
        """ generated source for method eUnset """
        if featureID == LfPackage.PORT__WIDTH_SPEC:
            self.setWidthSpec(None)
            return
        super(PortImpl, self).eUnset(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eIsSet(self, featureID):
        """ generated source for method eIsSet """
        if featureID == LfPackage.PORT__WIDTH_SPEC:
            return self.widthSpec != None
        return super(PortImpl, self).eIsSet(featureID)

# PortImpl
