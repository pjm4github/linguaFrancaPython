#!/usr/bin/env python
""" generated source for module HostImpl """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf.impl
# import org.eclipse.emf.common.notify.Notification
# import org.eclipse.emf.ecore.EClass
# import org.eclipse.emf.ecore.impl.ENotificationImpl
# import org.eclipse.emf.ecore.impl.MinimalEObjectImpl

from org.lflang.lf import Host

from org.lflang.lf import LfPackage

# 
#  * <!-- begin-user-doc -->
#  * An implementation of the model object '<em><b>Host</b></em>'.
#  * <!-- end-user-doc -->
#  * <p>
#  * The following features are implemented:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.impl.HostImpl#getUser <em>User</em>}</li>
#  *   <li>{@link org.lflang.lf.impl.HostImpl#getAddr <em>Addr</em>}</li>
#  *   <li>{@link org.lflang.lf.impl.HostImpl#getPort <em>Port</em>}</li>
#  * </ul>
#  *
#  * @generated
#  
class HostImpl(MinimalEObjectImpl, Container, Host):
    """ generated source for class HostImpl """
    #    * The default value of the '{@link #getUser() <em>User</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getUser()
    #    * @generated
    #    * @ordered
    #    
    USER_EDEFAULT = None

    #    * The cached value of the '{@link #getUser() <em>User</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getUser()
    #    * @generated
    #    * @ordered
    #    
    user = USER_EDEFAULT

    #    * The default value of the '{@link #getAddr() <em>Addr</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getAddr()
    #    * @generated
    #    * @ordered
    #    
    ADDR_EDEFAULT = None

    #    * The cached value of the '{@link #getAddr() <em>Addr</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getAddr()
    #    * @generated
    #    * @ordered
    #    
    addr = ADDR_EDEFAULT

    #    * The default value of the '{@link #getPort() <em>Port</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getPort()
    #    * @generated
    #    * @ordered
    #    
    PORT_EDEFAULT = 0

    #    * The cached value of the '{@link #getPort() <em>Port</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getPort()
    #    * @generated
    #    * @ordered
    #    
    port = PORT_EDEFAULT

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __init__(self):
        """ generated source for method __init__ """
        super(HostImpl, self).__init__()

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eStaticClass(self):
        """ generated source for method eStaticClass """
        return LfPackage.Literals.HOST

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getUser(self):
        """ generated source for method getUser """
        return self.user

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setUser(self, newUser):
        """ generated source for method setUser """
        oldUser = self.user
        self.user = newUser
        if eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.HOST__USER, oldUser, self.user))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getAddr(self):
        """ generated source for method getAddr """
        return self.addr

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setAddr(self, newAddr):
        """ generated source for method setAddr """
        oldAddr = self.addr
        self.addr = newAddr
        if eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.HOST__ADDR, oldAddr, self.addr))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getPort(self):
        """ generated source for method getPort """
        return self.port

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setPort(self, newPort):
        """ generated source for method setPort """
        oldPort = self.port
        self.port = newPort
        if eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.HOST__PORT, oldPort, self.port))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eGet(self, featureID, resolve, coreType):
        """ generated source for method eGet """
        if featureID == LfPackage.HOST__USER:
            return self.getUser()
        elif featureID == LfPackage.HOST__ADDR:
            return self.getAddr()
        elif featureID == LfPackage.HOST__PORT:
            return self.getPort()
        return super(HostImpl, self).eGet(featureID, resolve, coreType)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eSet(self, featureID, newValue):
        """ generated source for method eSet """
        if featureID == LfPackage.HOST__USER:
            self.setUser(str(newValue))
            return
        elif featureID == LfPackage.HOST__ADDR:
            self.setAddr(str(newValue))
            return
        elif featureID == LfPackage.HOST__PORT:
            self.setPort(int(newValue))
            return
        super(HostImpl, self).eSet(featureID, newValue)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eUnset(self, featureID):
        """ generated source for method eUnset """
        if featureID == LfPackage.HOST__USER:
            self.setUser(self.USER_EDEFAULT)
            return
        elif featureID == LfPackage.HOST__ADDR:
            self.setAddr(self.ADDR_EDEFAULT)
            return
        elif featureID == LfPackage.HOST__PORT:
            self.setPort(self.PORT_EDEFAULT)
            return
        super(HostImpl, self).eUnset(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eIsSet(self, featureID):
        """ generated source for method eIsSet """
        if featureID == LfPackage.HOST__USER:
            return self.user != None if self.USER_EDEFAULT == None else not self.USER_EDEFAULT == self.user
        elif featureID == LfPackage.HOST__ADDR:
            return self.addr != None if self.ADDR_EDEFAULT == None else not self.ADDR_EDEFAULT == self.addr
        elif featureID == LfPackage.HOST__PORT:
            return self.port != self.PORT_EDEFAULT
        return super(HostImpl, self).eIsSet(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __str__(self):
        """ generated source for method toString """
        if eIsProxy():
            return super(HostImpl, self).__str__()
        result = StringBuilder(super(HostImpl, self).__str__())
        result.append(" (user: ")
        result.append(self.user)
        result.append(", addr: ")
        result.append(self.addr)
        result.append(", port: ")
        result.append(self.port)
        result.append(')')
        return result.__str__()

# HostImpl
