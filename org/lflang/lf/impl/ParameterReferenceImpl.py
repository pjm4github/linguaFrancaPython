#!/usr/bin/env python
""" generated source for module ParameterReferenceImpl """
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf.impl
# import org.eclipse.emf.common.notify.Notification
# import org.eclipse.emf.ecore.EClass
# import org.eclipse.emf.ecore.InternalEObject
# import org.eclipse.emf.ecore.impl.ENotificationImpl

from org.lflang.lf import LfPackage

from org.lflang.lf import Parameter

from org.lflang.lf import ParameterReference

# 
#  * <!-- begin-user-doc -->
#  * An implementation of the model object '<em><b>Parameter Reference</b></em>'.
#  * <!-- end-user-doc -->
#  * <p>
#  * The following features are implemented:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.impl.ParameterReferenceImpl#getParameter <em>Parameter</em>}</li>
#  * </ul>
#  *
#  * @generated
#  
class ParameterReferenceImpl(ExpressionImpl, ParameterReference):
    """ generated source for class ParameterReferenceImpl """
    #    * The cached value of the '{@link #getParameter() <em>Parameter</em>}' reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @see #getParameter()
    #    * @generated
    #    * @ordered
    #    
    parameter = None

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def __init__(self):
        """ generated source for method __init__ """
        super(ParameterReferenceImpl, self).__init__()

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eStaticClass(self):
        """ generated source for method eStaticClass """
        return LfPackage.Literals.PARAMETER_REFERENCE

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def getParameter(self):
        """ generated source for method getParameter """
        if self.parameter != None and self.parameter.eIsProxy():
            oldParameter = self.parameter
            self.parameter = eResolveProxy(oldParameter)
            if self.parameter != oldParameter:
                if eNotificationRequired():
                    eNotify(ENotificationImpl(self, Notification.RESOLVE, LfPackage.PARAMETER_REFERENCE__PARAMETER, oldParameter, self.parameter))
        return self.parameter

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def basicGetParameter(self):
        """ generated source for method basicGetParameter """
        return self.parameter

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def setParameter(self, newParameter):
        """ generated source for method setParameter """
        oldParameter = self.parameter
        self.parameter = newParameter
        if eNotificationRequired():
            eNotify(ENotificationImpl(self, Notification.SET, LfPackage.PARAMETER_REFERENCE__PARAMETER, oldParameter, self.parameter))

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eGet(self, featureID, resolve, coreType):
        """ generated source for method eGet """
        if featureID == LfPackage.PARAMETER_REFERENCE__PARAMETER:
            if resolve:
                return self.getParameter()
            return self.basicGetParameter()
        return super(ParameterReferenceImpl, self).eGet(featureID, resolve, coreType)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eSet(self, featureID, newValue):
        """ generated source for method eSet """
        if featureID == LfPackage.PARAMETER_REFERENCE__PARAMETER:
            self.setParameter(newValue)
            return
        super(ParameterReferenceImpl, self).eSet(featureID, newValue)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eUnset(self, featureID):
        """ generated source for method eUnset """
        if featureID == LfPackage.PARAMETER_REFERENCE__PARAMETER:
            self.setParameter(None)
            return
        super(ParameterReferenceImpl, self).eUnset(featureID)

    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    def eIsSet(self, featureID):
        """ generated source for method eIsSet """
        if featureID == LfPackage.PARAMETER_REFERENCE__PARAMETER:
            return self.parameter != None
        return super(ParameterReferenceImpl, self).eIsSet(featureID)

# ParameterReferenceImpl
