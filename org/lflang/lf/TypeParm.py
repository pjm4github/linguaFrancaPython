#!/usr/bin/env python
""" generated source for module TypeParm """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Type Parm</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.TypeParm#getLiteral <em>Literal</em>}</li>
#  *   <li>{@link org.lflang.lf.TypeParm#getCode <em>Code</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getTypeParm()
#  * @model
#  * @generated
#  
class TypeParm(EObject):
    """ generated source for interface TypeParm """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Literal</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Literal</em>' attribute.
    #    * @see #setLiteral(String)
    #    * @see org.lflang.lf.LfPackage#getTypeParm_Literal()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getLiteral(self):
        """ generated source for method getLiteral """

    #    * Sets the value of the '{@link org.lflang.lf.TypeParm#getLiteral <em>Literal</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Literal</em>' attribute.
    #    * @see #getLiteral()
    #    * @generated
    #    
    @abstractmethod
    def setLiteral(self, value):
        """ generated source for method setLiteral """

    #    * Returns the value of the '<em><b>Code</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Code</em>' containment reference.
    #    * @see #setCode(Code)
    #    * @see org.lflang.lf.LfPackage#getTypeParm_Code()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getCode(self):
        """ generated source for method getCode """

    #    * Sets the value of the '{@link org.lflang.lf.TypeParm#getCode <em>Code</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Code</em>' containment reference.
    #    * @see #getCode()
    #    * @generated
    #    
    @abstractmethod
    def setCode(self, value):
        """ generated source for method setCode """

#  TypeParm
