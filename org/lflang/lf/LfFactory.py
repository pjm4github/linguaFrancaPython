#!/usr/bin/env python
""" generated source for module LfFactory """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.ecore.EFactory

# 
#  * <!-- begin-user-doc -->
#  * The <b>Factory</b> for the model.
#  * It provides a create method for each non-abstract class of the model.
#  * <!-- end-user-doc -->
#  * @see org.lflang.lf.LfPackage
#  * @generated
#  
class LfFactory(EFactory):
    """ generated source for interface LfFactory """
    __metaclass__ = ABCMeta
    #    * The singleton instance of the factory.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @generated
    #    
    eINSTANCE = org.lflang.lf.impl.LfFactoryImpl.init()

    #    * Returns a new object of class '<em>Model</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Model</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createModel(self):
        """ generated source for method createModel """

    #    * Returns a new object of class '<em>Import</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Import</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createImport(self):
        """ generated source for method createImport """

    #    * Returns a new object of class '<em>Reactor Decl</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Reactor Decl</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createReactorDecl(self):
        """ generated source for method createReactorDecl """

    #    * Returns a new object of class '<em>Imported Reactor</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Imported Reactor</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createImportedReactor(self):
        """ generated source for method createImportedReactor """

    #    * Returns a new object of class '<em>Reactor</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Reactor</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createReactor(self):
        """ generated source for method createReactor """

    #    * Returns a new object of class '<em>Type Parm</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Type Parm</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTypeParm(self):
        """ generated source for method createTypeParm """

    #    * Returns a new object of class '<em>Target Decl</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Target Decl</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTargetDecl(self):
        """ generated source for method createTargetDecl """

    #    * Returns a new object of class '<em>State Var</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>State Var</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createStateVar(self):
        """ generated source for method createStateVar """

    #    * Returns a new object of class '<em>Method</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Method</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createMethod(self):
        """ generated source for method createMethod """

    #    * Returns a new object of class '<em>Method Argument</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Method Argument</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createMethodArgument(self):
        """ generated source for method createMethodArgument """

    #    * Returns a new object of class '<em>Input</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Input</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createInput(self):
        """ generated source for method createInput """

    #    * Returns a new object of class '<em>Output</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Output</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createOutput(self):
        """ generated source for method createOutput """

    #    * Returns a new object of class '<em>Timer</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Timer</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTimer(self):
        """ generated source for method createTimer """

    #    * Returns a new object of class '<em>Mode</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Mode</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createMode(self):
        """ generated source for method createMode """

    #    * Returns a new object of class '<em>Action</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Action</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createAction(self):
        """ generated source for method createAction """

    #    * Returns a new object of class '<em>Reaction</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Reaction</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createReaction(self):
        """ generated source for method createReaction """

    #    * Returns a new object of class '<em>Trigger Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Trigger Ref</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTriggerRef(self):
        """ generated source for method createTriggerRef """

    #    * Returns a new object of class '<em>Builtin Trigger Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Builtin Trigger Ref</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createBuiltinTriggerRef(self):
        """ generated source for method createBuiltinTriggerRef """

    #    * Returns a new object of class '<em>Deadline</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Deadline</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createDeadline(self):
        """ generated source for method createDeadline """

    #    * Returns a new object of class '<em>STP</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>STP</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createSTP(self):
        """ generated source for method createSTP """

    #    * Returns a new object of class '<em>Preamble</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Preamble</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createPreamble(self):
        """ generated source for method createPreamble """

    #    * Returns a new object of class '<em>Instantiation</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Instantiation</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createInstantiation(self):
        """ generated source for method createInstantiation """

    #    * Returns a new object of class '<em>Connection</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Connection</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createConnection(self):
        """ generated source for method createConnection """

    #    * Returns a new object of class '<em>Serializer</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Serializer</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createSerializer(self):
        """ generated source for method createSerializer """

    #    * Returns a new object of class '<em>Attribute</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Attribute</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createAttribute(self):
        """ generated source for method createAttribute """

    #    * Returns a new object of class '<em>Attr Parm</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Attr Parm</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createAttrParm(self):
        """ generated source for method createAttrParm """

    #    * Returns a new object of class '<em>Attr Parm Value</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Attr Parm Value</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createAttrParmValue(self):
        """ generated source for method createAttrParmValue """

    #    * Returns a new object of class '<em>Key Value Pairs</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Key Value Pairs</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createKeyValuePairs(self):
        """ generated source for method createKeyValuePairs """

    #    * Returns a new object of class '<em>Key Value Pair</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Key Value Pair</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createKeyValuePair(self):
        """ generated source for method createKeyValuePair """

    #    * Returns a new object of class '<em>Array</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Array</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createArray(self):
        """ generated source for method createArray """

    #    * Returns a new object of class '<em>Element</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Element</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createElement(self):
        """ generated source for method createElement """

    #    * Returns a new object of class '<em>Typed Variable</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Typed Variable</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTypedVariable(self):
        """ generated source for method createTypedVariable """

    #    * Returns a new object of class '<em>Variable</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Variable</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createVariable(self):
        """ generated source for method createVariable """

    #    * Returns a new object of class '<em>Var Ref</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Var Ref</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createVarRef(self):
        """ generated source for method createVarRef """

    #    * Returns a new object of class '<em>Assignment</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Assignment</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createAssignment(self):
        """ generated source for method createAssignment """

    #    * Returns a new object of class '<em>Parameter</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Parameter</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createParameter(self):
        """ generated source for method createParameter """

    #    * Returns a new object of class '<em>Expression</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Expression</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createExpression(self):
        """ generated source for method createExpression """

    #    * Returns a new object of class '<em>Parameter Reference</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Parameter Reference</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createParameterReference(self):
        """ generated source for method createParameterReference """

    #    * Returns a new object of class '<em>Time</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Time</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createTime(self):
        """ generated source for method createTime """

    #    * Returns a new object of class '<em>Port</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Port</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createPort(self):
        """ generated source for method createPort """

    #    * Returns a new object of class '<em>Type</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Type</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createType(self):
        """ generated source for method createType """

    #    * Returns a new object of class '<em>Array Spec</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Array Spec</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createArraySpec(self):
        """ generated source for method createArraySpec """

    #    * Returns a new object of class '<em>Width Spec</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Width Spec</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createWidthSpec(self):
        """ generated source for method createWidthSpec """

    #    * Returns a new object of class '<em>Width Term</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Width Term</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createWidthTerm(self):
        """ generated source for method createWidthTerm """

    #    * Returns a new object of class '<em>IPV4 Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>IPV4 Host</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createIPV4Host(self):
        """ generated source for method createIPV4Host """

    #    * Returns a new object of class '<em>IPV6 Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>IPV6 Host</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createIPV6Host(self):
        """ generated source for method createIPV6Host """

    #    * Returns a new object of class '<em>Named Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Named Host</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createNamedHost(self):
        """ generated source for method createNamedHost """

    #    * Returns a new object of class '<em>Host</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Host</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createHost(self):
        """ generated source for method createHost """

    #    * Returns a new object of class '<em>Code</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Code</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createCode(self):
        """ generated source for method createCode """

    #    * Returns a new object of class '<em>Literal</em>'.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return a new object of class '<em>Literal</em>'.
    #    * @generated
    #    
    @abstractmethod
    def createLiteral(self):
        """ generated source for method createLiteral """

    #    * Returns the package supported by this factory.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the package supported by this factory.
    #    * @generated
    #    
    @abstractmethod
    def getLfPackage(self):
        """ generated source for method getLfPackage """

# LfFactory
