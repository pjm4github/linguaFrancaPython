#!/usr/bin/env python
""" generated source for module Element """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Element</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Element#getKeyvalue <em>Keyvalue</em>}</li>
#  *   <li>{@link org.lflang.lf.Element#getArray <em>Array</em>}</li>
#  *   <li>{@link org.lflang.lf.Element#getLiteral <em>Literal</em>}</li>
#  *   <li>{@link org.lflang.lf.Element#getTime <em>Time</em>}</li>
#  *   <li>{@link org.lflang.lf.Element#getUnit <em>Unit</em>}</li>
#  *   <li>{@link org.lflang.lf.Element#getId <em>Id</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getElement()
#  * @model
#  * @generated
#  
class Element(EObject):
    """ generated source for interface Element """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Keyvalue</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Keyvalue</em>' containment reference.
    #    * @see #setKeyvalue(KeyValuePairs)
    #    * @see org.lflang.lf.LfPackage#getElement_Keyvalue()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getKeyvalue(self):
        """ generated source for method getKeyvalue """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getKeyvalue <em>Keyvalue</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Keyvalue</em>' containment reference.
    #    * @see #getKeyvalue()
    #    * @generated
    #    
    @abstractmethod
    def setKeyvalue(self, value):
        """ generated source for method setKeyvalue """

    #    * Returns the value of the '<em><b>Array</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Array</em>' containment reference.
    #    * @see #setArray(Array)
    #    * @see org.lflang.lf.LfPackage#getElement_Array()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getArray(self):
        """ generated source for method getArray """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getArray <em>Array</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Array</em>' containment reference.
    #    * @see #getArray()
    #    * @generated
    #    
    @abstractmethod
    def setArray(self, value):
        """ generated source for method setArray """

    #    * Returns the value of the '<em><b>Literal</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Literal</em>' attribute.
    #    * @see #setLiteral(String)
    #    * @see org.lflang.lf.LfPackage#getElement_Literal()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getLiteral(self):
        """ generated source for method getLiteral """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getLiteral <em>Literal</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Literal</em>' attribute.
    #    * @see #getLiteral()
    #    * @generated
    #    
    @abstractmethod
    def setLiteral(self, value):
        """ generated source for method setLiteral """

    #    * Returns the value of the '<em><b>Time</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Time</em>' attribute.
    #    * @see #setTime(int)
    #    * @see org.lflang.lf.LfPackage#getElement_Time()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getTime(self):
        """ generated source for method getTime """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getTime <em>Time</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Time</em>' attribute.
    #    * @see #getTime()
    #    * @generated
    #    
    @abstractmethod
    def setTime(self, value):
        """ generated source for method setTime """

    #    * Returns the value of the '<em><b>Unit</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Unit</em>' attribute.
    #    * @see #setUnit(String)
    #    * @see org.lflang.lf.LfPackage#getElement_Unit()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getUnit(self):
        """ generated source for method getUnit """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getUnit <em>Unit</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Unit</em>' attribute.
    #    * @see #getUnit()
    #    * @generated
    #    
    @abstractmethod
    def setUnit(self, value):
        """ generated source for method setUnit """

    #    * Returns the value of the '<em><b>Id</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Id</em>' attribute.
    #    * @see #setId(String)
    #    * @see org.lflang.lf.LfPackage#getElement_Id()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getId(self):
        """ generated source for method getId """

    #    * Sets the value of the '{@link org.lflang.lf.Element#getId <em>Id</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Id</em>' attribute.
    #    * @see #getId()
    #    * @generated
    #    
    @abstractmethod
    def setId(self, value):
        """ generated source for method setId """

#  Element
