#!/usr/bin/env python
""" generated source for module Connection """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.common.util.EList
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Connection</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Connection#getLeftPorts <em>Left Ports</em>}</li>
#  *   <li>{@link org.lflang.lf.Connection#isIterated <em>Iterated</em>}</li>
#  *   <li>{@link org.lflang.lf.Connection#isPhysical <em>Physical</em>}</li>
#  *   <li>{@link org.lflang.lf.Connection#getRightPorts <em>Right Ports</em>}</li>
#  *   <li>{@link org.lflang.lf.Connection#getDelay <em>Delay</em>}</li>
#  *   <li>{@link org.lflang.lf.Connection#getSerializer <em>Serializer</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getConnection()
#  * @model
#  * @generated
#  
class Connection(EObject):
    """ generated source for interface Connection """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Left Ports</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.VarRef}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Left Ports</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getConnection_LeftPorts()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getLeftPorts(self):
        """ generated source for method getLeftPorts """

    #    * Returns the value of the '<em><b>Iterated</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Iterated</em>' attribute.
    #    * @see #setIterated(boolean)
    #    * @see org.lflang.lf.LfPackage#getConnection_Iterated()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def isIterated(self):
        """ generated source for method isIterated """

    #    * Sets the value of the '{@link org.lflang.lf.Connection#isIterated <em>Iterated</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Iterated</em>' attribute.
    #    * @see #isIterated()
    #    * @generated
    #    
    @abstractmethod
    def setIterated(self, value):
        """ generated source for method setIterated """

    #    * Returns the value of the '<em><b>Physical</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Physical</em>' attribute.
    #    * @see #setPhysical(boolean)
    #    * @see org.lflang.lf.LfPackage#getConnection_Physical()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def isPhysical(self):
        """ generated source for method isPhysical """

    #    * Sets the value of the '{@link org.lflang.lf.Connection#isPhysical <em>Physical</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Physical</em>' attribute.
    #    * @see #isPhysical()
    #    * @generated
    #    
    @abstractmethod
    def setPhysical(self, value):
        """ generated source for method setPhysical """

    #    * Returns the value of the '<em><b>Right Ports</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.VarRef}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Right Ports</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getConnection_RightPorts()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getRightPorts(self):
        """ generated source for method getRightPorts """

    #    * Returns the value of the '<em><b>Delay</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Delay</em>' containment reference.
    #    * @see #setDelay(Expression)
    #    * @see org.lflang.lf.LfPackage#getConnection_Delay()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getDelay(self):
        """ generated source for method getDelay """

    #    * Sets the value of the '{@link org.lflang.lf.Connection#getDelay <em>Delay</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Delay</em>' containment reference.
    #    * @see #getDelay()
    #    * @generated
    #    
    @abstractmethod
    def setDelay(self, value):
        """ generated source for method setDelay """

    #    * Returns the value of the '<em><b>Serializer</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Serializer</em>' containment reference.
    #    * @see #setSerializer(Serializer)
    #    * @see org.lflang.lf.LfPackage#getConnection_Serializer()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getSerializer(self):
        """ generated source for method getSerializer """

    #    * Sets the value of the '{@link org.lflang.lf.Connection#getSerializer <em>Serializer</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Serializer</em>' containment reference.
    #    * @see #getSerializer()
    #    * @generated
    #    
    @abstractmethod
    def setSerializer(self, value):
        """ generated source for method setSerializer """

#  Connection
