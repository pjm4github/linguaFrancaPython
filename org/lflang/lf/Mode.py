#!/usr/bin/env python
""" generated source for module Mode """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.common.util.EList

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Mode</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Mode#isInitial <em>Initial</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getStateVars <em>State Vars</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getTimers <em>Timers</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getActions <em>Actions</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getInstantiations <em>Instantiations</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getConnections <em>Connections</em>}</li>
#  *   <li>{@link org.lflang.lf.Mode#getReactions <em>Reactions</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getMode()
#  * @model
#  * @generated
#  
class Mode(Variable):
    """ generated source for interface Mode """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Initial</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Initial</em>' attribute.
    #    * @see #setInitial(boolean)
    #    * @see org.lflang.lf.LfPackage#getMode_Initial()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def isInitial(self):
        """ generated source for method isInitial """

    #    * Sets the value of the '{@link org.lflang.lf.Mode#isInitial <em>Initial</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Initial</em>' attribute.
    #    * @see #isInitial()
    #    * @generated
    #    
    @abstractmethod
    def setInitial(self, value):
        """ generated source for method setInitial """

    #    * Returns the value of the '<em><b>State Vars</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.StateVar}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>State Vars</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_StateVars()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getStateVars(self):
        """ generated source for method getStateVars """

    #    * Returns the value of the '<em><b>Timers</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Timer}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Timers</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_Timers()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getTimers(self):
        """ generated source for method getTimers """

    #    * Returns the value of the '<em><b>Actions</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Action}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Actions</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_Actions()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getActions(self):
        """ generated source for method getActions """

    #    * Returns the value of the '<em><b>Instantiations</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Instantiation}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Instantiations</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_Instantiations()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getInstantiations(self):
        """ generated source for method getInstantiations """

    #    * Returns the value of the '<em><b>Connections</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Connection}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Connections</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_Connections()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getConnections(self):
        """ generated source for method getConnections """

    #    * Returns the value of the '<em><b>Reactions</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Reaction}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Reactions</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getMode_Reactions()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getReactions(self):
        """ generated source for method getReactions """

#  Mode
