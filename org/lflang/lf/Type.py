#!/usr/bin/env python
""" generated source for module Type """
from abc import ABCMeta, abstractmethod
# 
#  * generated by Xtext 2.28.0
#  
# package: org.lflang.lf
# import org.eclipse.emf.common.util.EList
# import org.eclipse.emf.ecore.EObject

# 
#  * <!-- begin-user-doc -->
#  * A representation of the model object '<em><b>Type</b></em>'.
#  * <!-- end-user-doc -->
#  *
#  * <p>
#  * The following features are supported:
#  * </p>
#  * <ul>
#  *   <li>{@link org.lflang.lf.Type#isTime <em>Time</em>}</li>
#  *   <li>{@link org.lflang.lf.Type#getArraySpec <em>Array Spec</em>}</li>
#  *   <li>{@link org.lflang.lf.Type#getId <em>Id</em>}</li>
#  *   <li>{@link org.lflang.lf.Type#getTypeParms <em>Type Parms</em>}</li>
#  *   <li>{@link org.lflang.lf.Type#getStars <em>Stars</em>}</li>
#  *   <li>{@link org.lflang.lf.Type#getCode <em>Code</em>}</li>
#  * </ul>
#  *
#  * @see org.lflang.lf.LfPackage#getType()
#  * @model
#  * @generated
#  
class Type(EObject):
    """ generated source for interface Type """
    __metaclass__ = ABCMeta
    #    * Returns the value of the '<em><b>Time</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Time</em>' attribute.
    #    * @see #setTime(boolean)
    #    * @see org.lflang.lf.LfPackage#getType_Time()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def isTime(self):
        """ generated source for method isTime """

    #    * Sets the value of the '{@link org.lflang.lf.Type#isTime <em>Time</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Time</em>' attribute.
    #    * @see #isTime()
    #    * @generated
    #    
    @abstractmethod
    def setTime(self, value):
        """ generated source for method setTime """

    #    * Returns the value of the '<em><b>Array Spec</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Array Spec</em>' containment reference.
    #    * @see #setArraySpec(ArraySpec)
    #    * @see org.lflang.lf.LfPackage#getType_ArraySpec()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getArraySpec(self):
        """ generated source for method getArraySpec """

    #    * Sets the value of the '{@link org.lflang.lf.Type#getArraySpec <em>Array Spec</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Array Spec</em>' containment reference.
    #    * @see #getArraySpec()
    #    * @generated
    #    
    @abstractmethod
    def setArraySpec(self, value):
        """ generated source for method setArraySpec """

    #    * Returns the value of the '<em><b>Id</b></em>' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Id</em>' attribute.
    #    * @see #setId(String)
    #    * @see org.lflang.lf.LfPackage#getType_Id()
    #    * @model
    #    * @generated
    #    
    @abstractmethod
    def getId(self):
        """ generated source for method getId """

    #    * Sets the value of the '{@link org.lflang.lf.Type#getId <em>Id</em>}' attribute.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Id</em>' attribute.
    #    * @see #getId()
    #    * @generated
    #    
    @abstractmethod
    def setId(self, value):
        """ generated source for method setId """

    #    * Returns the value of the '<em><b>Type Parms</b></em>' containment reference list.
    #    * The list contents are of type {@link org.lflang.lf.Type}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Type Parms</em>' containment reference list.
    #    * @see org.lflang.lf.LfPackage#getType_TypeParms()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getTypeParms(self):
        """ generated source for method getTypeParms """

    #    * Returns the value of the '<em><b>Stars</b></em>' attribute list.
    #    * The list contents are of type {@link java.lang.String}.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Stars</em>' attribute list.
    #    * @see org.lflang.lf.LfPackage#getType_Stars()
    #    * @model unique="false"
    #    * @generated
    #    
    @abstractmethod
    def getStars(self):
        """ generated source for method getStars """

    #    * Returns the value of the '<em><b>Code</b></em>' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @return the value of the '<em>Code</em>' containment reference.
    #    * @see #setCode(Code)
    #    * @see org.lflang.lf.LfPackage#getType_Code()
    #    * @model containment="true"
    #    * @generated
    #    
    @abstractmethod
    def getCode(self):
        """ generated source for method getCode """

    #    * Sets the value of the '{@link org.lflang.lf.Type#getCode <em>Code</em>}' containment reference.
    #    * <!-- begin-user-doc -->
    #    * <!-- end-user-doc -->
    #    * @param value the new value of the '<em>Code</em>' containment reference.
    #    * @see #getCode()
    #    * @generated
    #    
    @abstractmethod
    def setCode(self, value):
        """ generated source for method setCode """

#  Type
